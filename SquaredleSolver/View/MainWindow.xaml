<Window x:Class="SquaredleSolver.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewmodel="clr-namespace:SquaredleSolver.ViewModel"
        xmlns:converters="clr-namespace:SquaredleSolver.ValueConverters"
        xmlns:view="clr-namespace:SquaredleSolver.View" 
        d:DataContext="{d:DesignInstance Type=viewmodel:MainWindowViewModel}"
        mc:Ignorable="d"
        Title="SquaredleSolver" Height="399" Width="793" Background="#ecf0f1"
        MouseLeftButtonUp="Window_MouseLeftButtonUp">
    <Window.Resources>
        <converters:SolverStateToTextConverter x:Key="SolverStateToTextConverter"/>
        <converters:TimeSpanToTextConverter x:Key="TimeSpanToTextConverter"/>
        <converters:NumberOfAnswersFoundToTextConverter x:Key="NumberOfAnswersFoundToTextConverter"/>
    </Window.Resources>
    <Grid>
        <TextBlock
            Height="20"
            VerticalAlignment="Top"
            TextAlignment="Left"
            Text="Answers" Margin="396,10,0,0" HorizontalAlignment="Left" Width="46"/>

        <TextBlock
            Width="160"
            Margin="10,-190,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            TextAlignment="Center"
            d:Text="Place Holder">
            <TextBlock.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Text" Value="Puzzle Definition"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=VisualPuzzleFilter, Path=Visibility}" Value="Visible">
                            <Setter Property="Text" Value="Answer Filter"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Resources>
        </TextBlock>
        <Border
            Width="160" Height="160" Margin="10,0,0,0"
            BorderBrush="Black"
            Background="White"
            BorderThickness="1"
            CornerRadius="3"
            VerticalAlignment="Center"
            HorizontalAlignment="Left">
            <Viewbox HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBox 
                    x:Name="InputField"
                    FontStretch="ExtraExpanded"
                    PreviewKeyDown="TextBox_PreviewKeyDown"
                    LostFocus="InputField_LostFocus"
                    CharacterCasing="Upper"
                    AcceptsReturn="True" 
                    Visibility="Collapsed"
                    d:Text="HELL&#10;OW R&#10;LDFO&#10;OBAR"
                    Text="{Binding PuzzleAsText, UpdateSourceTrigger=PropertyChanged}"
                    FontFamily="Courier New"
                    Background="Transparent"
                    BorderThickness="0" />
            </Viewbox>
        </Border>
        <Border
            Width="160" Height="160" Margin="10,0,0,0"
            VerticalAlignment="Center"
            HorizontalAlignment="Left">
            <view:FilterGrid
                    d:Background="Gray"
                    x:Name="VisualPuzzleFilter"
                    DataContext="{Binding NodeFilterGridViewModel}">
                    <view:FilterGrid.Resources>
                        <Style TargetType="view:FilterGrid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=InputField, Path=IsFocused}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=InputField, Path=IsFocused}" Value="False">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </view:FilterGrid.Resources>
                </view:FilterGrid>
        </Border>

        <Button
            Width="100"
            Height="20"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            Margin="40,200,0,0"
            Content="Change Puzzle"
            VerticalContentAlignment="Center"
            Visibility="{Binding ElementName=VisualPuzzleFilter, Path=Visibility}"
            Command="{Binding FocusPuzzleInput}"/>
        <TextBlock
            Margin="226,-50,0,0"
            d:Text="Run Time"
            HorizontalAlignment="Left"
            Width="132"
            Height="17"
            VerticalAlignment="Center"
            TextAlignment="Center">
            <TextBlock.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Text" Value="{Binding SolverRunTime, Converter={StaticResource TimeSpanToTextConverter}}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HasSolverBeenRunBefore}" Value="False">
                            <Setter Property="Text" Value="Welcome!"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Resources>
        </TextBlock>
        <Button x:Name="ToggleSolverButton"
            d:Content="PlaceHolder"
            d:Background="#2ecc71"
            Command="{Binding ToggleSolverOnOff}"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            Margin="226,0,0,0"
            Width="132"
            Height="20">
            <Button.Resources>
                <Style TargetType="Button">
                    <Style.Triggers>
                        <DataTrigger
                            Binding="{Binding SolverState, Converter={StaticResource SolverStateToTextConverter}}"
                            Value="SolverStopped">
                            <Setter Property="Background" Value="#2ecc71"/>
                            <Setter Property="Content" Value="Explore Puzzle"/>
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding SolverState, Converter={StaticResource SolverStateToTextConverter}}"
                            Value="SolverRunning">
                            <Setter Property="Background" Value="#e74c3c"/>
                            <Setter Property="Content" Value="Stop Exploring"/>
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding SolverState, Converter={StaticResource SolverStateToTextConverter}}"
                            Value="SolverCompleted">
                            <Setter Property="Background" Value="#f1c40f"/>
                            <Setter Property="Content" Value="Puzzle Explored"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Resources>
        </Button>
        <TextBlock
            Margin="226,50,0,0"
            Text="{Binding NumberOfAnswersFound, Converter={StaticResource NumberOfAnswersFoundToTextConverter}}"
            HorizontalAlignment="Left"
            Width="132"
            Height="17"
            VerticalAlignment="Center"
            TextAlignment="Center">
            <d:TextBlock.Text>Answers Found: 5</d:TextBlock.Text>
        </TextBlock>

        <ListView
                Margin="396,30,10,10"
                Background="White"
                x:Name="ResultsListView"
                d:ItemsSource="{d:SampleData ItemCount=5}"
                ItemsSource="{Binding CharacterGridViewModels}"
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                ScrollViewer.HorizontalScrollBarVisibility="Hidden">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel
                        Orientation="Horizontal"
                        Width="{Binding ElementName=ResultsListView, Path=DataContext.WrapPanelWidth}"
                        VirtualizingPanel.IsVirtualizing="True"
                        d:Width="384"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Border
                        Width="150"
                        Height="150">
                        <view:CharacterGrid/>
                    </Border>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ListView>


    </Grid>
</Window>
